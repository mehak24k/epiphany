{"version":3,"sources":["NavBar/NavBar.js","Post/Post.js","Posts/Posts.js","Login/Login.js","Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","localStorage","getItem","Link","onClick","this","callback","Component","Post","state","post","params","match","axios","get","postId","data","setState","json_post","text","body","console","log","tags","title","Row","map","tag","Col","style","paddingLeft","paddingRight","md","Badge","name","split","i","key","Posts","colors","posts","filteredPosts","tagsList","filterPosts","bind","filterTags","deleteTag","arr","push","j","tagArr","event","filter","toLowerCase","includes","target","value","index","indexOf","splice","count","forEach","myTag","length","keyCode","len","randomNum","Math","floor","random","color","top100Films","Form","Group","controlId","Control","label","type","placeholder","onChange","Text","ButtonGroup","paddingTop","paddingBottom","aria-label","Button","width","Autocomplete","freeSolo","options","option","renderInput","TextField","margin","onKeyUp","Spinner","animation","to","backgroundColor","getColor","height","maxLength","Truncate","lines","Login","email","password","loggedIn","handleChange","handleSubmit","token","loginData","then","response","setItem","user_info","points","error","preventDefault","span","offset","onSubmit","Label","Profile","userData","Tabs","defaultActiveKey","Tab","eventKey","App","logout","login","clear","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.18e86d2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Navbar, Nav } from 'react-bootstrap';\n\nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\" fixed=\"top\">\n      <Navbar.Brand href=\"/\">Epiphany!</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {localStorage.getItem('loggedIn') != \"true\" && <Nav.Link href=\"/login\">Login</Nav.Link>}\n          {localStorage.getItem('loggedIn') != \"true\" && <Nav.Link href=\"/signup\">Signup</Nav.Link>}\n        </Nav>\n        <Nav>\n          {localStorage.getItem('loggedIn') === \"true\" && <Nav.Link href=\"/profile\">Profile</Nav.Link>}\n          <Nav.Link onClick={this.props.callback}>Logout</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n      );\n  }\n}\n\nexport default NavBar;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n    });\n  }\n\n  render() {\n    const {post} = this.state;\n    if (post === null) return <p>Loading ...</p>;\n    var text = post.body\n    console.log(post.tags);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{post.title}</h1>\n            <Row>\n            {post.tags && post.tags.map(tag => (\n              <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                <h4>\n                <Badge variant=\"info\">{tag.name}</Badge>\n                </h4>\n              </Col>\n              ))\n            }\n            </Row>\n            <hr className=\"my-4\" />\n            <p>Content:</p>\n              <p className=\"lead\">\n                  {text.split(\"\\n\").map((i,key) => {\n                      return <div key={key}>{i}</div>;\n                  })}\n              </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\n\nclass Posts extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: null,\n      filteredPosts: null,\n      tags: null,\n      tagsList: null,\n    };\n    this.filterPosts = this.filterPosts.bind(this);\n    this.filterTags = this.filterTags.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n  }\n\n  async componentDidMount() {\n      const data = (await axios.get('http://localhost:5000/')).data;\n      console.log(data.data[0]);\n      const posts = data.data[0];\n      const tags = data.data[1];\n      console.log(posts);\n      let arr = [];\n      for (var i in posts) {\n        arr.push(posts[i])\n      }\n      console.log(arr);\n      let tagArr = [];\n      for (var j in tags) {\n        tagArr.push(tags[j])\n      }\n      this.setState({\n        posts: arr,\n        filteredPosts: arr,\n        tagsList: tagArr,\n      });\n      console.log(this.state.posts);\n      console.log(this.state.filteredPosts);\n      console.log(this.state.tagsList);\n  }\n\n  filterPosts(event) {\n    this.setState({\n      filteredPosts: this.state.posts.filter(post => {\n        return post.title.toLowerCase().includes(event.target.value.toLowerCase())\n        || post.body.toLowerCase().includes(event.target.value.toLowerCase())\n      })\n    });\n  }\n\n  deleteTag(event) {\n    console.log(event.target.id)\n    let arr = [];\n    if (this.state.tags === null){\n      arr = [];\n    } else {\n      arr = this.state.tags;\n    }\n\n    const index = arr.indexOf(event.target.id)\n    console.log(index);\n    arr.splice(index, 1)\n    this.setState({\n      tags: arr,\n      filteredPosts: this.state.posts.filter(post => {\n        var check = false;\n        let count = 0;\n        arr.forEach(myTag => {\n          post.tags.forEach(tag => {\n            if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n              count = count + 1;\n            }\n          })\n        });\n        if (count === arr.length) {\n          check = true;\n        } else {\n          check = false;\n        }\n        return check;\n      }),\n    })\n    console.log(arr);\n\n  }\n\n  filterTags(event) {\n    if (event.keyCode === 39) {\n      let arr = [];\n      if (this.state.tags === null){\n        arr = [];\n      } else {\n        arr = this.state.tags;\n      }\n      arr.push(event.target.value)\n      this.setState({\n        tags: arr,\n        filteredPosts: this.state.posts.filter(post => {\n          var check = false;\n          let count = 0;\n          arr.forEach(myTag => {\n            post.tags.forEach(tag => {\n              if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n                count = count + 1;\n              }\n            })\n          });\n          if (count === arr.length) {\n            check = true;\n          } else {\n            check = false;\n          }\n          return check;\n        }),\n\n      });\n    }\n    console.log(this.state.tags);\n  }\n\n  colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n  getColor(){\n    if (this.colors.length === 0) {\n      this.colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n    }\n    var len = this.colors.length;\n    var randomNum = Math.floor(Math.random()*len);\n    var color = this.colors[randomNum];\n    this.colors.splice(randomNum, 1);\n    return color;\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <Col>\n          <Form>\n            <Form.Group controlId=\"formSearch\">\n            <Form.Control label=\"freeSolo\" type=\"text\" placeholder=\"Search posts!\" onChange={this.filterPosts}/>\n              <Form.Text className=\"text-muted\">\n                Here, you can search with text that matches the title or body of the posts.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n          </Col>\n        </div>\n        <div className=\"row\">\n          <Row style={{paddingLeft: 25}}>\n          {this.state.tags && this.state.tags.map(tag => (\n            <ButtonGroup style={{ paddingLeft: 2, paddingRight: 2, paddingTop: 2, paddingBottom: 5}} aria-label=\"Basic example\">\n              <Button onClick={this.deleteTag} id={tag} variant=\"secondary\">x</Button>\n              <Button variant=\"secondary\">{tag}</Button>\n            </ButtonGroup>\n            ))\n        }\n          </Row>\n        </div>\n        <div className=\"row\">\n        {this.state.tagsList && <div style={{ width: 1125, paddingLeft: 15 }}>\n        <Autocomplete\n          id=\"free-solo-demo\"\n          freeSolo\n          options={top100Films.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField {...params}  id=\"standard-full-width\" label=\"Search with tags!\" margin=\"normal\" variant=\"outlined\" onKeyUp={this.filterTags}/>\n          )}\n        />\n        </div>\n      }\n        </div>\n        <div className=\"row\">\n          {this.state.posts === null && <div> <Spinner animation=\"border\" variant=\"primary\" /> <p>Loading posts...</p></div>}\n          {this.state.filteredPosts && this.state.filteredPosts.map(post => (\n              <div key={post.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n                <Link to={`/post/${post.id}`}>\n                  <div className=\"card mb-3\" style={{backgroundColor: this.getColor(), color: \"#161717\", height: '250px'}}>\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">{post.title}</h4>\n                    <Row>\n                    {post.tags && post.tags.map(tag => (\n                      <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                        <Badge variant=\"info\">{tag.name}</Badge>\n                      </Col>\n                      ))\n                    }\n                    </Row>\n                    <p className=\"card-text\" style={{maxLength: \"100\"}}>\n                    <Truncate lines={2}>\n                        {post.body}\n                    </Truncate>\n                    </p>\n                  </div>\n                  </div>\n                </Link>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password:'',\n      loggedIn: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('loggedIn');\n    console.log(token);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    let loginData = {\"email\": this.state.email, \"password\": this.state.password}\n    axios.post('http://localhost:5000/login', loginData)\n    .then((response) => {\n      //console.log(response.data.user_info[0].name);\n      localStorage.setItem('userName', response.data.user_info[0].name);\n      localStorage.setItem('userEmail', this.state.email);\n      localStorage.setItem('userPoints', response.data.user_info[0].points);\n      localStorage.setItem('loggedIn', true);\n      this.setState({loggedIn: true});\n      this.props.callback();\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n\n      event.preventDefault();\n  }\n\n  render() {\n    const redirectTo = this.state.loggedIn;\n    if (redirectTo) {\n        return (\n          <Redirect to=\"/\" />\n        );\n    }\n    return (\n      <Col md={{ span: \"4\", offset: \"4\" }}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" email={this.state.email} onChange={this.handleChange} />\n          </Form.Group>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" password={this.state.password} onChange={this.handleChange}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n\n      </Col>\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Nav from 'react-bootstrap/Nav'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport {Link} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass Profile extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: null,\n    };\n  }\n\n  async componentDidMount() {\n    let userData = {\"email\": localStorage.getItem('userEmail')}\n    console.log(userData);\n    axios.post('http://localhost:5000/profile', userData)\n    .then((response) => {\n      console.log(response.data.posts);\n      const posts = response.data.posts;\n      let arr = [];\n      for (var i in posts) {\n        arr.push(posts[i])\n      }\n      this.setState({\n        posts: arr,\n      });\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"profile\" title=\"Profile\">\n            <div className=\"row\">\n              <div className=\"jumbotron col-12\">\n                <h1 className=\"display-3\">{localStorage.getItem('userName')}</h1>\n                <h2 className=\"display-3\">Points: {localStorage.getItem('userPoints')}</h2>\n              </div>\n            </div>\n          </Tab>\n          <Tab eventKey=\"posts\" title=\"Posts\">\n            <div className=\"row\">\n            {this.state.posts && this.state.posts.map(post => (\n                <div key={post.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n                  <Link to={`/post/${post.id}`}>\n                    <div className=\"card mb-3\" style={{backgroundColor: '#abd5de', color: \"#161717\", height: '250px'}}>\n                    <div className=\"card-body\">\n                      <h4 className=\"card-title\">{post.title}</h4>\n                      <Row>\n                      {post.tags && post.tags.map(tag => (\n                        <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                          <Badge variant=\"info\">{tag.name}</Badge>\n                        </Col>\n                        ))\n                      }\n                      </Row>\n                      <p className=\"card-text\" style={{maxLength: \"100\"}}>\n                      <Truncate lines={2}>\n                          {post.body}\n                      </Truncate>\n                      </p>\n                    </div>\n                    </div>\n                  </Link>\n                </div>\n              ))\n            }\n            </div>\n          </Tab>\n          <Tab eventKey=\"followers\" title=\"Followers\">\n            hello again\n          </Tab>\n          <Tab eventKey=\"following\" title=\"Following\">\n            hello again2\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport NavBar from './NavBar/NavBar';\nimport Post from './Post/Post';\nimport Posts from './Posts/Posts';\nimport Login from './Login/Login';\nimport Profile from './Profile/Profile';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n    this.state = {\n      login: false,\n    };\n  }\n\n  login() {\n    this.setState({login: true});\n  }\n\n  logout() {\n    localStorage.clear();\n    this.setState({login: false});\n  }\n\n  render() {\n    const token = localStorage.getItem('loggedIn');\n    console.log(token);\n\n  return (\n      <div>\n        <NavBar callback={this.logout}/>\n        <Route exact path='/' component={Posts}/>\n        <Route exact path='/post/:postId' component={Post}/>\n        {localStorage.getItem('loggedIn') != \"true\" && <Route exact path='/login' component={() => <Login callback={this.login}/>}/>}\n        <Route exact path='/profile' component={Profile}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}