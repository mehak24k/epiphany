{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/Post/UpdatePost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from \"react-router-dom\";\n\nclass UpdatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      updated: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    console.log(post.json_post.body);\n    const post = (await axios.get(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/update`)).data;\n    this.setState({\n      title: post.json_post.title,\n      body: post.json_post.body\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let postData = {\n      \"title\": this.state.title,\n      \"body\": this.state.body,\n      \"user\": localStorage.getItem(\"userEmail\")\n    };\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/update`, postData).then(response => {\n      console.log(response);\n      this.setState({\n        updated: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const redirectTo = this.state.updated;\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/post/${params.postId}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 200,\n        paddingRight: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"15\",\n      name: \"body\",\n      value: this.state.body,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UpdatePost;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/Post/UpdatePost.js"],"names":["React","Component","axios","Form","Button","Col","Redirect","UpdatePost","constructor","props","state","title","body","updated","handleChange","bind","handleSubmit","componentDidMount","match","params","console","log","post","json_post","get","postId","data","setState","event","target","name","value","postData","localStorage","getItem","then","response","error","preventDefault","render","redirectTo","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\n\nclass UpdatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body:'',\n      updated: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    console.log(post.json_post.body);\n    const post = (await axios.get(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/update`)).data;\n    this.setState({\n      title: post.json_post.title,\n      body: post.json_post.body\n    });\n\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    const { match: { params } } = this.props;\n    let postData = {\"title\": this.state.title, \"body\": this.state.body, \"user\": localStorage.getItem(\"userEmail\")}\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/update`, postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        updated: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n      event.preventDefault();\n  }\n\n  render() {\n    const redirectTo = this.state.updated;\n    const { match: { params } } = this.props;\n    if (redirectTo) {\n        return (\n          <Redirect to={`/post/${params.postId}`} />\n        );\n    }\n    return (\n      <Col style={{paddingLeft: 200, paddingRight: 200}}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\n          </Form.Group>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Body</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"15\" name=\"body\" value={this.state.body} onChange={this.handleChange}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n      </Col>\n    );\n  }\n}\n\n\n\nexport default UpdatePost;\n"]},"metadata":{},"sourceType":"module"}