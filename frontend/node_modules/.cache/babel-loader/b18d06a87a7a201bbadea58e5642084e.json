{"ast":null,"code":"var _jsxFileName = \"/Users/yx/epiphany/frontend/src/Homepage/FollowedPosts.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab/';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    this.state = {\n      posts: null,\n      key: 0\n    };\n    this.filterPosts = this.filterPosts.bind(this);\n  }\n\n  async componentDidMount() {\n    let loginData = {\n      \"email\": localStorage.getItem(\"userEmail\")\n    };\n    axios.post('http://localhost:5000/profile', loginData).then(response => {\n      const posts = response.data.data[0].posts;\n      let arr = [];\n\n      for (var i in posts) {\n        arr.push(posts[i]);\n      }\n\n      this.setState({\n        posts: arr\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  getColor() {\n    if (this.colors.length === 0) {\n      this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    }\n\n    var len = this.colors.length;\n    var randomNum = Math.floor(Math.random() * len);\n    var color = this.colors[randomNum];\n    this.colors.splice(randomNum, 1);\n    return color;\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    let first = 0;\n\n    function myKey() {\n      first = first + 1;\n      return first;\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, this.state.posts === null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 47\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 96\n      }\n    }, \"Loading posts...\")), this.state.filteredPosts && this.state.filteredPosts.map(post => /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: post.id,\n      style: {\n        backgroundColor: this.getColor(),\n        marginTop: 10,\n        marginBottom: 10,\n        alignItems: \"center\",\n        width: '50rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      key: myKey(),\n      to: `/post/${post.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        color: \"#161717\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      key: myKey(),\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2,\n        alignItems: \"center\"\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, tag.name)))), post.is_file === false && /*#__PURE__*/React.createElement(Card.Text, {\n      style: {\n        color: \"#161717\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Truncate, {\n      lines: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, post.body)), post.is_file === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"samp\",\n      width: \"540\",\n      height: \"380\",\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: `./static/${post.body}`,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }\n    }), \"Your browser does not support this video format.\")))), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      key: myKey(),\n      to: `/users/${post.user_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: \"#323336\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, \"Posted by \", post.user, \" at \", post.time)))))));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/yx/epiphany/frontend/src/Homepage/FollowedPosts.js"],"names":["React","Component","Link","axios","Truncate","Badge","Row","Col","Spinner","Form","Button","ButtonGroup","TextField","Autocomplete","Card","Container","Alert","Posts","constructor","props","colors","state","posts","key","filterPosts","bind","componentDidMount","loginData","localStorage","getItem","post","then","response","data","arr","i","push","setState","error","console","log","getColor","length","len","randomNum","Math","floor","random","color","splice","render","top100Films","tagsList","first","myKey","filteredPosts","map","id","backgroundColor","marginTop","marginBottom","alignItems","width","textAlign","title","tags","tag","paddingLeft","paddingRight","name","is_file","body","user_id","user","time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nclass Posts extends Component {\n\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        posts: null,\n        key: 0,\n      };\n      this.filterPosts = this.filterPosts.bind(this);\n    }\n  \n    async componentDidMount() {\n        let loginData = {\"email\": localStorage.getItem(\"userEmail\")}\n        axios.post('http://localhost:5000/profile', loginData)\n        .then((response) => {\n            const posts = response.data.data[0].posts;\n            let arr = [];\n            for (var i in posts) {\n            arr.push(posts[i])\n            }\n            this.setState({\n            posts: arr,\n            });\n        }, (error) => {\n            console.log('Looks like there was a problem: \\n', error);\n        });\n    }\n  \n    colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n    getColor(){\n      if (this.colors.length === 0) {\n        this.colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n      }\n      var len = this.colors.length;\n      var randomNum = Math.floor(Math.random()*len);\n      var color = this.colors[randomNum];\n      this.colors.splice(randomNum, 1);\n      return color;\n    }\n  \n    render() {\n      const top100Films = this.state.tagsList;\n      let first = 0;\n      function myKey() {\n        first = first + 1;\n        return first;\n      }\n      return (\n        <Container className=\"justify-content-md-center\">\n          {this.state.posts === null && <div> <Spinner animation=\"border\" variant=\"primary\" /> <p>Loading posts...</p></div>}\n  \n          {this.state.filteredPosts && this.state.filteredPosts.map(post => (\n            <Row className=\"justify-content-md-center\">\n  \n            <Card key={post.id} style={{backgroundColor: this.getColor(), marginTop: 10, marginBottom: 10, alignItems: \"center\", width: '50rem'}}>\n              <Link key={myKey()} to={`/post/${post.id}`}>\n                  <Card.Body>\n                    <Card.Title style={{color: \"#161717\", textAlign: \"center\"}}>{post.title}</Card.Title>\n                    <Row className=\"justify-content-md-center\">\n                    {post.tags && post.tags.map(tag => (\n                      <Col key={myKey()} style={{ paddingLeft: 2, paddingRight: 2, alignItems: \"center\" }} md=\"auto\">\n                        <Badge variant=\"info\">{tag.name}</Badge>\n                      </Col>\n                      ))\n                    }\n                    </Row>\n                    {post.is_file === false &&\n                    <Card.Text style={{color: \"#161717\", textAlign: \"center\"}}>\n                    <Truncate lines={2}>\n                        {post.body}\n                    </Truncate>\n                    </Card.Text>\n                  }\n                  {post.is_file === true &&\n                    <div>\n                      <video id=\"samp\" width=\"540\" height=\"380\" controls>\n                          <source src={`./static/${post.body}`} type=\"video/mp4\">\n                          </source>\n                          Your browser does not support this video format.\n                      </video>\n                    </div>\n                }\n                  </Card.Body>\n                  </Link>\n                  <Card.Text className=\"mb-3\">\n                    <Link key={myKey()} to={`/users/${post.user_id}`}>\n                      <small style={{color: \"#323336\"}}>Posted by {post.user} at {post.time}</small>\n                    </Link>\n                  </Card.Text>\n              </Card>\n              </Row>\n            ))\n          }\n        </Container>\n      )\n    }\n  }\n  \n  export default Posts;"]},"metadata":{},"sourceType":"module"}