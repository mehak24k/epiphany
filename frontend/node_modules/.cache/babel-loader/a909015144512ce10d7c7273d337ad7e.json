{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/Post/Post.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Comment from './Comment';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\nimport Form from 'react-bootstrap/Form';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      text: '',\n      postId: 0,\n      deleted: false,\n      commented: false\n    };\n    this.submit = this.submit.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  async componentDidMount() {\n    this.refreshPost();\n  }\n\n  async refreshPost() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const post = (await axios.get(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n      postId: params.postId,\n      commented: false\n    });\n  }\n\n  updateComment(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async submit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let postData = {\n      \"text\": this.state.text,\n      \"user_email\": localStorage.getItem('userEmail'),\n      \"post_id\": params.postId\n    };\n    console.log(postData);\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/comment`, postData).then(response => {\n      console.log(response);\n      this.setState({\n        commented: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  async deletePost() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let postData = {\n      \"text\": this.state.text,\n      \"user_email\": localStorage.getItem('userEmail'),\n      \"post_id\": params.postId\n    };\n    console.log(postData);\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/delete`, postData).then(response => {\n      console.log(response);\n      this.setState({\n        deleted: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  render() {\n    const deleted = this.state.deleted;\n    const commented = this.state.commented;\n\n    if (deleted) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (commented) {\n      /*\n      return (\n        //<Redirect to={`/post/${this.state.postId}`} />\n        this.refreshPost()\n      );\n      */\n      this.refreshPost();\n    }\n\n    const {\n      post\n    } = this.state;\n    if (post === null) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }\n    }, \"Loading ...\");\n    var text = post.body;\n    console.log(post.tags);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, tag.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 30\n        }\n      }, i);\n    })), localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email && /*#__PURE__*/React.createElement(Link, {\n      to: `${post.id}/update`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 122\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 153\n      }\n    }, \"Update\")), localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      onClick: () => {\n        this.deletePost();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 122\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      name: \"text\",\n      placeholder: \"Any comments?\",\n      text: this.state.text,\n      onChange: this.updateComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Comment\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), post.comments.map(comment => comment.comment_level === 1 ? /*#__PURE__*/React.createElement(Media, {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 31\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 31\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 42\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 40\n        }\n      }, \"reply \\xB7 \", comment.time)));\n    })))) : comment.comment_level === 2 ? /*#__PURE__*/React.createElement(Media, {\n      className: \"ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 31\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 44\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 42\n        }\n      }, \"reply \\xB7 \", comment.time)));\n    })))) : /*#__PURE__*/React.createElement(Media, {\n      className: \"ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 31\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 46\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 44\n        }\n      }, \"reply \\xB7 \", comment.time)));\n    }))))))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/Post/Post.js"],"names":["React","Component","Redirect","Link","axios","Comment","Badge","Row","Col","Button","Media","Form","Post","constructor","props","state","post","text","postId","deleted","commented","submit","bind","updateComment","deletePost","componentDidMount","refreshPost","match","params","get","data","setState","json_post","event","target","name","value","postData","localStorage","getItem","console","log","then","response","error","preventDefault","render","body","tags","title","map","tag","paddingLeft","paddingRight","split","i","key","user_email","id","comments","comment","comment_level","commentor","time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Comment from './Comment'\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Media from 'react-bootstrap/Media'\nimport Form from 'react-bootstrap/Form'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      text:'',\n      postId: 0,\n      deleted: false,\n      commented: false,\n    };\n    this.submit = this.submit.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  async componentDidMount() {\n    this.refreshPost();\n  }\n\n  async refreshPost() {\n    const { match: { params } } = this.props;\n    const post = (await axios.get(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n      postId: params.postId,\n      commented: false,\n    });\n  }\n\n  updateComment(event) {\n    this.setState({\n        [event.target.name]: event.target.value\n      });\n  }\n\n  async submit(event) {\n    const { match: { params } } = this.props;\n    let postData = {\"text\": this.state.text, \"user_email\": localStorage.getItem('userEmail'), \"post_id\": params.postId}\n    console.log(postData);\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/comment`, postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        commented: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  async deletePost() {\n    const { match: { params } } = this.props;\n    let postData = {\"text\": this.state.text, \"user_email\": localStorage.getItem('userEmail'), \"post_id\": params.postId}\n    console.log(postData);\n    axios.post(`https://epiphany-test-three.herokuapp.com/posts/${params.postId}/delete`, postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        deleted: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  render() {\n    const deleted = this.state.deleted;\n    const commented = this.state.commented;\n    if (deleted) {\n      return (\n        <Redirect to=\"/\" />\n      );\n    }\n    if (commented) {\n      /*\n      return (\n        //<Redirect to={`/post/${this.state.postId}`} />\n        this.refreshPost()\n      );\n      */\n      this.refreshPost();\n    }\n    const {post} = this.state;\n    if (post === null) return <p>Loading ...</p>;\n    var text = post.body\n    console.log(post.tags);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{post.title}</h1>\n            <Row>\n            {post.tags && post.tags.map(tag => (\n              <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                <h4>\n                <Badge variant=\"info\">{tag.name}</Badge>\n                </h4>\n              </Col>\n              ))\n            }\n            </Row>\n            <hr className=\"my-4\" />\n              <p className=\"lead\">\n                  {text.split(\"\\n\").map((i,key) => {\n                      return <div key={key}>{i}</div>;\n                  })}\n              </p>\n              {(localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email) && <Link to={`${post.id}/update`}><Button variant=\"outline-success\">Update</Button></Link>}\n              {(localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email) && <Button variant=\"outline-danger\" onClick={() => {this.deletePost()}}>Delete</Button>}\n            <hr className=\"my-4\" />\n\n            <Form onSubmit={this.submit}>\n              <Form.Group controlId=\"text\">\n                  <Form.Control as=\"textarea\" name=\"text\" placeholder=\"Any comments?\" text={this.state.text} onChange={this.updateComment} />\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">Comment</Button>\n            </Form>\n\n            <hr className=\"my-4\" />\n                {\n                  post.comments.map(comment => (\n                    comment.comment_level === 1 ?\n                          <Media className=\"mt-1\">\n                            <Media.Body>\n                              <h5>{ comment.commentor }</h5>\n                              <p>\n                                { comment.text.split(\"\\n\").map((i,key) => {\n                                  return <div key={key}>\n                                    {i}\n                                    <p><small>reply · { comment.time }</small></p>\n                                    </div>;\n                                }) }\n                              </p>\n                            </Media.Body>\n                          </Media>\n                    : comment.comment_level === 2 ?\n                        <Media className=\"ml-3\">\n                          <Media.Body>\n                            <h5>{ comment.commentor }</h5>\n                              <p>\n                                { comment.text.split(\"\\n\").map((i,key) => {\n                                    return <div key={key}>\n                                      {i}\n                                      <p><small>reply · { comment.time }</small></p>\n                                    </div>;\n                                }) }\n                              </p>\n                          </Media.Body>\n                        </Media>\n                        :\n                          <Media className=\"ml-5\">\n                            <Media.Body>\n                              <h5>{ comment.commentor }</h5>\n                                <p>\n                                  { comment.text.split(\"\\n\").map((i,key) => {\n                                      return <div key={key}>\n                                        {i}\n                                        <p><small>reply · { comment.time }</small></p>\n                                      </div>;\n                                  }) }\n                                </p>\n                            </Media.Body>\n                          </Media>\n                  ))\n                }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}