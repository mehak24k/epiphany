{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab/';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      posted: false,\n      tagsList: null,\n      tags: null,\n      newTags: null,\n      errorMessage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n  }\n\n  async componentDidMount() {\n    const data = (await axios.get('http://localhost:5000/main')).data;\n    console.log(data.data[0]);\n    const tags = data.data[1];\n    let tagArr = [];\n\n    for (var j in tags) {\n      tagArr.push(tags[j]);\n    }\n\n    this.setState({\n      tagsList: tagArr\n    });\n    console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  deleteTag(event) {\n    console.log(event.target.id);\n    let arr = [];\n\n    if (this.state.tags === null) {\n      arr = [];\n    } else {\n      arr = this.state.tags;\n    }\n\n    const index = arr.indexOf(event.target.id);\n    console.log(index);\n    arr.splice(index, 1);\n    console.log(arr);\n    this.setState({\n      tags: arr\n    });\n    let arr2 = [];\n\n    if (this.state.newTags === null) {\n      arr2 = [];\n    } else {\n      arr2 = this.state.newTags;\n    }\n\n    if (arr2.indexOf(event.target.id) !== -1) {\n      arr2.splice(index, 1);\n      this.setState({\n        newTags: arr2\n      });\n    }\n\n    console.log(arr2);\n  }\n\n  addTag(event) {\n    this.setState({\n      errorMessage: ''\n    });\n\n    if (event.keyCode === 13) {\n      if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag has already been added.\"\n        });\n      } else {\n        let arr = [];\n\n        if (this.state.tags === null) {\n          arr = [];\n        } else {\n          arr = this.state.tags;\n        }\n\n        let tempArr = this.state.tagsList.map(function (value) {\n          return value.name.toLowerCase();\n        });\n\n        if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n          arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())].name);\n        } else {\n          arr.push(event.target.value);\n        }\n\n        this.setState({\n          tags: arr\n        });\n      }\n\n      console.log(this.state.tags); // this means the tag is new.\n\n      if (this.state.tagsList.some(tag => tag.name.toLowerCase() === event.target.value.toLowerCase())) {} else {\n        let arr2 = [];\n\n        if (this.state.newTags === null) {\n          arr2 = [];\n        } else {\n          arr2 = this.state.newTags;\n        }\n\n        arr2.push(event.target.value);\n        this.setState({\n          newTags: arr2\n        });\n      }\n    }\n  }\n\n  async handleSubmit(event) {\n    let postData = {\n      \"title\": this.state.title,\n      \"body\": this.state.body,\n      \"user\": localStorage.getItem(\"userEmail\"),\n      \"tags\": this.state.tags,\n      \"newTags\": this.state.newTags\n    };\n    console.log(postData);\n\n    if (this.state.title === '' || this.state.body === '' || this.state.tags === null) {\n      this.setState({\n        errorMessage: \"Please fill in all fields.\"\n      });\n    } else {\n      axios.post('http://localhost:5000/create', postData).then(response => {\n        console.log(response);\n        this.setState({\n          posted: true\n        });\n      }, error => {\n        console.log('Looks like there was a problem: \\n', error);\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n\n    if (redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 200,\n        paddingRight: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, this.state.tagsList === null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 40\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 46\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 95\n      }\n    }, \"Loading...\")), this.state.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \" \", this.state.errorMessage, \" \"), this.state.tagsList && /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onKeyPress: e => {\n        e.key === 'Enter' && e.preventDefault();\n      },\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      title: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingLeft: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, this.state.tags && this.state.tags.map(tag => /*#__PURE__*/React.createElement(ButtonGroup, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingTop: 2,\n        paddingBottom: 5\n      },\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deleteTag,\n      id: tag,\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, tag))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, this.state.tagsList && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 1125,\n        paddingLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"free-solo-demo\",\n      freeSolo: true,\n      options: top100Films.map(option => option.name),\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        onKeyPress: e => {\n          e.key === 'Enter' && e.preventDefault();\n        },\n        id: \"standard-full-width\",\n        label: \"Add tags!\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onKeyUp: this.addTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"15\",\n      name: \"body\",\n      placeholder: \"Body\",\n      body: this.state.body,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js"],"names":["React","Component","axios","Form","Button","Col","Redirect","Row","ButtonGroup","TextField","Autocomplete","Alert","Spinner","NewPost","constructor","props","state","title","body","posted","tagsList","tags","newTags","errorMessage","handleChange","bind","handleSubmit","addTag","deleteTag","componentDidMount","data","get","console","log","tagArr","j","push","setState","event","target","name","value","id","arr","index","indexOf","splice","arr2","keyCode","some","tag","toLowerCase","tempArr","map","postData","localStorage","getItem","post","then","response","error","preventDefault","render","top100Films","redirectTo","paddingLeft","paddingRight","e","key","paddingTop","paddingBottom","width","option","params"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\nimport Alert from 'react-bootstrap/Alert'\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body:'',\n      posted: false,\n      tagsList: null,\n      tags: null,\n      newTags: null,\n      errorMessage: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n  }\n\n  async componentDidMount() {\n      const data = (await axios.get('http://localhost:5000/main')).data;\n      console.log(data.data[0]);\n      const tags = data.data[1];\n      let tagArr = [];\n      for (var j in tags) {\n        tagArr.push(tags[j])\n      }\n      this.setState({\n        tagsList: tagArr,\n      });\n      console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  deleteTag(event) {\n    console.log(event.target.id)\n    let arr = [];\n    if (this.state.tags === null){\n      arr = [];\n    } else {\n      arr = this.state.tags;\n    }\n\n    const index = arr.indexOf(event.target.id)\n    console.log(index);\n    arr.splice(index, 1)\n    console.log(arr);\n    this.setState({\n      tags: arr,\n    })\n\n    let arr2 = [];\n    if (this.state.newTags === null){\n      arr2 = [];\n    } else {\n      arr2 = this.state.newTags;\n    }\n    if (arr2.indexOf(event.target.id) !== -1) {\n      arr2.splice(index, 1)\n      this.setState({\n        newTags: arr2,\n      })\n    }\n    console.log(arr2);\n\n  }\n\n  addTag(event) {\n    this.setState({\n      errorMessage: '',\n    })\n    if (event.keyCode === 13) {\n      if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag has already been added.\"\n        })\n      } else {\n        let arr = [];\n        if (this.state.tags === null){\n          arr = [];\n        } else {\n          arr = this.state.tags;\n        }\n        let tempArr = this.state.tagsList.map(function(value) {\n          return value.name.toLowerCase();\n        });\n        if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n          arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())].name);\n        } else {\n          arr.push(event.target.value)\n        }\n        this.setState({\n          tags: arr,\n        });\n      }\n      console.log(this.state.tags);\n      // this means the tag is new.\n      if (this.state.tagsList.some(tag => tag.name.toLowerCase() === event.target.value.toLowerCase())) {\n\n      } else {\n        let arr2 = [];\n        if (this.state.newTags === null){\n          arr2 = [];\n        } else {\n          arr2 = this.state.newTags;\n        }\n        arr2.push(event.target.value)\n        this.setState({\n          newTags: arr2,\n        });\n      }\n    }\n  }\n\n  async handleSubmit(event) {\n    let postData = {\"title\": this.state.title, \"body\": this.state.body, \"user\": localStorage.getItem(\"userEmail\"), \"tags\": this.state.tags, \"newTags\": this.state.newTags}\n    console.log(postData);\n    if (this.state.title === '' || this.state.body === '' || this.state.tags === null) {\n      this.setState({\n        errorMessage: \"Please fill in all fields.\"\n      })\n    } else {\n      axios.post('http://localhost:5000/create', postData)\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          posted: true,\n        })\n      }, (error) => {\n        console.log('Looks like there was a problem: \\n', error);\n      });\n    }\n      event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n    if (redirectTo) {\n        return (\n          <Redirect to=\"/\" />\n        );\n    }\n    return (\n      <Col style={{paddingLeft: 200, paddingRight: 200}}>\n      {this.state.tagsList === null && <div> <Spinner animation=\"border\" variant=\"primary\" /> <p>Loading...</p></div>}\n      { this.state.errorMessage &&\n        <Alert variant='danger'> { this.state.errorMessage } </Alert> }\n      {this.state.tagsList &&\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} type=\"text\" name=\"title\" placeholder=\"Enter title\" title={this.state.title} onChange={this.handleChange} />\n          </Form.Group>\n          <div className=\"row\">\n            <Row style={{paddingLeft: 25}}>\n            {this.state.tags && this.state.tags.map(tag => (\n              <ButtonGroup style={{ paddingLeft: 2, paddingRight: 2, paddingTop: 2, paddingBottom: 5}} aria-label=\"Basic example\">\n                <Button onClick={this.deleteTag} id={tag} variant=\"secondary\">x</Button>\n                <Button variant=\"secondary\">{tag}</Button>\n              </ButtonGroup>\n              ))\n          }\n            </Row>\n          </div>\n          <div className=\"row\">\n          {this.state.tagsList && <div style={{ width: 1125, paddingLeft: 15 }}>\n          <Autocomplete\n            id=\"free-solo-demo\"\n            freeSolo\n            options={top100Films.map((option) => option.name)}\n            renderInput={(params) => (\n              <TextField {...params}  onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} id=\"standard-full-width\" label=\"Add tags!\" margin=\"normal\" variant=\"outlined\" onKeyUp={this.addTag}/>\n            )}\n          />\n          </div>\n        }\n          </div>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Body</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"15\" name=\"body\" placeholder=\"Body\" body={this.state.body} onChange={this.handleChange}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n      }\n      </Col>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}