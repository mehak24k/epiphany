{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab/';\nimport Alert from 'react-bootstrap/Alert';\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      posted: false,\n      tagsList: null,\n      tags: null,\n      newTags: null,\n      errorMessage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n  }\n\n  async componentDidMount() {\n    const data = (await axios.get('https://epiphany-test-three.herokuapp.com/main')).data;\n    console.log(data.data[0]);\n    const tags = data.data[1];\n    let tagArr = [];\n\n    for (var j in tags) {\n      tagArr.push(tags[j]);\n    }\n\n    this.setState({\n      tagsList: tagArr\n    });\n    console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addTag(event) {\n    if (event.keyCode === 39) {\n      if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag has already been added.\"\n        });\n      } else {\n        let arr = [];\n\n        if (this.state.tags === null) {\n          arr = [];\n        } else {\n          arr = this.state.tags;\n        }\n\n        let tempArr = this.state.tagsList.map(el => el.toLowerCase());\n\n        if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n          arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())]);\n        } else {\n          arr.push(event.target.value);\n        }\n\n        this.setState({\n          tags: arr\n        });\n      }\n\n      console.log(this.state.tags); // this means the tag is new.\n\n      if (this.state.tagsList.some(tag => tag.name.toLowerCase() !== event.target.value.toLowerCase())) {\n        let arr2 = [];\n\n        if (this.state.newTags === null) {\n          arr2 = [];\n        } else {\n          arr2 = this.state.newTags;\n        }\n\n        arr2.push(event.target.value);\n        this.setState({\n          newTags: arr2\n        });\n      }\n    }\n  }\n\n  async handleSubmit(event) {\n    let postData = {\n      \"title\": this.state.title,\n      \"body\": this.state.body,\n      \"user\": localStorage.getItem(\"userEmail\"),\n      \"tags\": this.state.tags,\n      \"newTags\": this.state.newTags\n    };\n    console.log(postData);\n    axios.post('http://localhost:5000/create', postData).then(response => {\n      console.log(response);\n      this.setState({\n        posted: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n\n    if (redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 200,\n        paddingRight: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, this.state.errorMessage && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \" \", this.state.errorMessage, \" \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      title: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingLeft: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, this.state.tags && this.state.tags.map(tag => /*#__PURE__*/React.createElement(ButtonGroup, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingTop: 2,\n        paddingBottom: 5\n      },\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deleteTag,\n      id: tag,\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, tag))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, this.state.tagsList && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 1125,\n        paddingLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"free-solo-demo\",\n      freeSolo: true,\n      options: top100Films.map(option => option.name),\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        id: \"standard-full-width\",\n        label: \"Add tags!\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onKeyUp: this.addTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"15\",\n      name: \"body\",\n      placeholder: \"Body\",\n      body: this.state.body,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js"],"names":["React","Component","axios","Form","Button","Col","Redirect","Row","ButtonGroup","TextField","Autocomplete","Alert","NewPost","constructor","props","state","title","body","posted","tagsList","tags","newTags","errorMessage","handleChange","bind","handleSubmit","addTag","componentDidMount","data","get","console","log","tagArr","j","push","setState","event","target","name","value","keyCode","some","tag","toLowerCase","arr","tempArr","map","el","indexOf","arr2","postData","localStorage","getItem","post","then","response","error","preventDefault","render","top100Films","redirectTo","paddingLeft","paddingRight","paddingTop","paddingBottom","deleteTag","width","option","params"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\nimport Alert from 'react-bootstrap/Alert'\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body:'',\n      posted: false,\n      tagsList: null,\n      tags: null,\n      newTags: null,\n      errorMessage: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n  }\n\n  async componentDidMount() {\n      const data = (await axios.get('https://epiphany-test-three.herokuapp.com/main')).data;\n      console.log(data.data[0]);\n      const tags = data.data[1];\n      let tagArr = [];\n      for (var j in tags) {\n        tagArr.push(tags[j])\n      }\n      this.setState({\n        tagsList: tagArr,\n      });\n      console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addTag(event) {\n    if (event.keyCode === 39) {\n      if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag has already been added.\"\n        })\n      } else {\n        let arr = [];\n        if (this.state.tags === null){\n          arr = [];\n        } else {\n          arr = this.state.tags;\n        }\n        let tempArr = this.state.tagsList.map(el => el.toLowerCase())\n        if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n          arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())]);\n        } else {\n          arr.push(event.target.value)\n        }\n        this.setState({\n          tags: arr,\n        });\n      }\n      console.log(this.state.tags);\n      // this means the tag is new.\n      if (this.state.tagsList.some(tag => tag.name.toLowerCase() !== event.target.value.toLowerCase())) {\n        let arr2 = [];\n        if (this.state.newTags === null){\n          arr2 = [];\n        } else {\n          arr2 = this.state.newTags;\n        }\n        arr2.push(event.target.value)\n        this.setState({\n          newTags: arr2,\n        });\n      }\n    }\n  }\n\n  async handleSubmit(event) {\n    let postData = {\"title\": this.state.title, \"body\": this.state.body, \"user\": localStorage.getItem(\"userEmail\"), \"tags\": this.state.tags, \"newTags\": this.state.newTags}\n    console.log(postData);\n    axios.post('http://localhost:5000/create', postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        posted: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n      event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n    if (redirectTo) {\n        return (\n          <Redirect to=\"/\" />\n        );\n    }\n    return (\n      <Col style={{paddingLeft: 200, paddingRight: 200}}>\n      { this.state.errorMessage &&\n        <Alert variant='danger'> { this.state.errorMessage } </Alert> }\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" title={this.state.title} onChange={this.handleChange} />\n          </Form.Group>\n          <div className=\"row\">\n            <Row style={{paddingLeft: 25}}>\n            {this.state.tags && this.state.tags.map(tag => (\n              <ButtonGroup style={{ paddingLeft: 2, paddingRight: 2, paddingTop: 2, paddingBottom: 5}} aria-label=\"Basic example\">\n                <Button onClick={this.deleteTag} id={tag} variant=\"secondary\">x</Button>\n                <Button variant=\"secondary\">{tag}</Button>\n              </ButtonGroup>\n              ))\n          }\n            </Row>\n          </div>\n          <div className=\"row\">\n          {this.state.tagsList && <div style={{ width: 1125, paddingLeft: 15 }}>\n          <Autocomplete\n            id=\"free-solo-demo\"\n            freeSolo\n            options={top100Films.map((option) => option.name)}\n            renderInput={(params) => (\n              <TextField {...params}  id=\"standard-full-width\" label=\"Add tags!\" margin=\"normal\" variant=\"outlined\" onKeyUp={this.addTag}/>\n            )}\n          />\n          </div>\n        }\n          </div>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Body</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"15\" name=\"body\" placeholder=\"Body\" body={this.state.body} onChange={this.handleChange}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n      </Col>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}