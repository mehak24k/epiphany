{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    this.state = {\n      posts: null,\n      filteredPosts: null,\n      tags: []\n    };\n    this.filterPosts = this.filterPosts.bind(this);\n    this.filterTags = this.filterTags.bind(this);\n  }\n\n  async componentDidMount() {\n    const posts = (await axios.get('http://localhost:5000/')).data;\n    let arr = [];\n\n    for (var i in posts) {\n      arr.push(posts[i]);\n    }\n\n    this.setState({\n      // an array of arrays\n      posts: arr[0],\n      filteredPosts: arr[0]\n    });\n    console.log(this.state.posts);\n    console.log(this.state.filteredPosts);\n  }\n\n  filterPosts(event) {\n    this.setState({\n      filteredPosts: this.state.posts.filter(post => {\n        return post.title.toLowerCase().includes(event.target.value.toLowerCase()) || post.body.toLowerCase().includes(event.target.value.toLowerCase());\n      })\n    });\n  }\n\n  filterTags(event) {\n    if (event.keyCode === 32) {\n      this.setState({\n        filteredPosts: this.state.posts.filter(post => {\n          var check = false;\n          post.tags.forEach(tag => {\n            if (tag.name.toLowerCase().includes(event.target.value.toLowerCase())) {\n              check = true;\n            }\n\n            ;\n          });\n          return check;\n        }),\n        tags: this.state.tags.push(event.target.value.toLowerCase())\n      });\n    }\n\n    console.log(this.state.tags);\n  }\n\n  getColor() {\n    if (this.colors.length === 0) {\n      this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    }\n\n    var len = this.colors.length;\n    var randomNum = Math.floor(Math.random() * len);\n    var color = this.colors[randomNum];\n    this.colors.splice(randomNum, 1);\n    return color;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search posts!\",\n      onChange: this.filterPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Here, you can search with text that matches the title or body of the posts.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.state.tags && this.state.tags.forEach(tag => /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, tag))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formSearch2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search with tags!\",\n      onKeyUp: this.filterTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Here, you can search with tags.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, this.state.posts === null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 47\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 96\n      }\n    }, \"Loading posts...\")), this.state.filteredPosts && this.state.filteredPosts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n      key: post.id,\n      className: \"col-sm-12 col-md-4 col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/post/${post.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        backgroundColor: this.getColor(),\n        color: \"#161717\",\n        height: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, tag.name)))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      style: {\n        maxLength: \"100\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Truncate, {\n      lines: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, post.body)))))))));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/Posts/Posts.js"],"names":["React","Component","Link","axios","Truncate","Badge","Row","Col","Spinner","Form","Button","Posts","constructor","props","colors","state","posts","filteredPosts","tags","filterPosts","bind","filterTags","componentDidMount","get","data","arr","i","push","setState","console","log","event","filter","post","title","toLowerCase","includes","target","value","body","keyCode","check","forEach","tag","name","getColor","length","len","randomNum","Math","floor","random","color","splice","render","paddingLeft","paddingRight","map","id","backgroundColor","height","maxLength"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass Posts extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: null,\n      filteredPosts: null,\n      tags: [],\n    };\n    this.filterPosts = this.filterPosts.bind(this);\n    this.filterTags = this.filterTags.bind(this);\n  }\n\n  async componentDidMount() {\n      const posts = (await axios.get('http://localhost:5000/')).data;\n      let arr = [];\n      for (var i in posts) {\n        arr.push(posts[i])\n      }\n      this.setState({\n        // an array of arrays\n        posts: arr[0],\n        filteredPosts: arr[0],\n      });\n      console.log(this.state.posts);\n      console.log(this.state.filteredPosts);\n  }\n\n  filterPosts(event) {\n    this.setState({\n      filteredPosts: this.state.posts.filter(post => {\n        return post.title.toLowerCase().includes(event.target.value.toLowerCase())\n        || post.body.toLowerCase().includes(event.target.value.toLowerCase())\n      })\n    });\n  }\n\n  filterTags(event) {\n    if (event.keyCode === 32) {\n      this.setState({\n        filteredPosts: this.state.posts.filter(post => {\n          var check = false;\n          post.tags.forEach(tag => {\n            if (tag.name.toLowerCase().includes(event.target.value.toLowerCase())) {\n              check = true;\n            };\n          });\n          return check;\n        }),\n        tags: this.state.tags.push(event.target.value.toLowerCase()),\n      });\n    }\n    console.log(this.state.tags);\n  }\n\n  colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n  getColor(){\n    if (this.colors.length === 0) {\n      this.colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n    }\n    var len = this.colors.length;\n    var randomNum = Math.floor(Math.random()*len);\n    var color = this.colors[randomNum];\n    this.colors.splice(randomNum, 1);\n    return color;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <Col>\n          <Form>\n            <Form.Group controlId=\"formSearch\">\n              <Form.Control type=\"text\" placeholder=\"Search posts!\" onChange={this.filterPosts}/>\n              <Form.Text className=\"text-muted\">\n                Here, you can search with text that matches the title or body of the posts.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n          </Col>\n        </div>\n        <div className=\"row\">\n          <Col>\n          {this.state.tags && this.state.tags.forEach(tag => (\n            <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n              <Badge variant=\"info\">{tag}</Badge>\n            </Col>\n            ))\n        }\n          </Col>\n        </div>\n        <div className=\"row\">\n        <Col>\n          <Form>\n            <Form.Group controlId=\"formSearch2\">\n              <Form.Control type=\"text\" placeholder=\"Search with tags!\" onKeyUp={this.filterTags}/>\n              <Form.Text className=\"text-muted\">\n                Here, you can search with tags.\n              </Form.Text>\n            </Form.Group>\n          </Form>\n          </Col>\n        </div>\n        <div className=\"row\">\n          {this.state.posts === null && <div> <Spinner animation=\"border\" variant=\"primary\" /> <p>Loading posts...</p></div>}\n          {this.state.filteredPosts && this.state.filteredPosts.map(post => (\n              <div key={post.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n                <Link to={`/post/${post.id}`}>\n                  <div className=\"card mb-3\" style={{backgroundColor: this.getColor(), color: \"#161717\", height: '250px'}}>\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">{post.title}</h4>\n                    <Row>\n                    {post.tags && post.tags.map(tag => (\n                      <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                        <Badge variant=\"info\">{tag.name}</Badge>\n                      </Col>\n                      ))\n                    }\n                    </Row>\n                    <p className=\"card-text\" style={{maxLength: \"100\"}}>\n                    <Truncate lines={2}>\n                        {post.body}\n                    </Truncate>\n                    </p>\n                  </div>\n                  </div>\n                </Link>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}