{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab/';\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      posted: false,\n      tagsList: null,\n      tags: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n  }\n\n  async componentDidMount() {\n    const data = (await axios.get('https://epiphany-test-three.herokuapp.com/main')).data;\n    console.log(data.data[0]);\n    const tags = data.data[1];\n    let tagArr = [];\n\n    for (var j in tags) {\n      tagArr.push(tags[j]);\n    }\n\n    this.setState({\n      tagsList: tagArr\n    });\n    console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addTag(event) {\n    if (event.keyCode === 39) {\n      let arr = [];\n\n      if (this.state.tags === null) {\n        arr = [];\n      } else {\n        arr = this.state.tags;\n      }\n\n      arr.push(event.target.value);\n      this.setState({\n        tags: arr\n      });\n    }\n\n    console.log(this.state.tags);\n  }\n\n  async handleSubmit(event) {\n    let postData = {\n      \"title\": this.state.title,\n      \"body\": this.state.body,\n      \"user\": localStorage.getItem(\"userEmail\")\n    };\n    axios.post('https://epiphany-test-three.herokuapp.com/create', postData).then(response => {\n      console.log(response);\n      this.setState({\n        posted: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n\n    if (redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 200,\n        paddingRight: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      title: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingLeft: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, this.state.tags && this.state.tags.map(tag => /*#__PURE__*/React.createElement(ButtonGroup, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingTop: 2,\n        paddingBottom: 5\n      },\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deleteTag,\n      id: tag,\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, tag))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, this.state.tagsList && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 1125,\n        paddingLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"free-solo-demo\",\n      freeSolo: true,\n      options: top100Films.map(option => option.name),\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        id: \"standard-full-width\",\n        label: \"Search with tags!\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onKeyUp: this.addTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"15\",\n      name: \"body\",\n      placeholder: \"Body\",\n      body: this.state.body,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/CreatePosts/NewPost.js"],"names":["React","Component","axios","Form","Button","Col","Redirect","Row","ButtonGroup","TextField","Autocomplete","NewPost","constructor","props","state","title","body","posted","tagsList","tags","handleChange","bind","handleSubmit","addTag","componentDidMount","data","get","console","log","tagArr","j","push","setState","event","target","name","value","keyCode","arr","postData","localStorage","getItem","post","then","response","error","preventDefault","render","top100Films","redirectTo","paddingLeft","paddingRight","map","tag","paddingTop","paddingBottom","deleteTag","width","option","params"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;;AAEA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC9BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAC,EAFM;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,QAAQ,EAAE,IAJC;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAED,QAAMG,iBAAN,GAA0B;AACtB,UAAMC,IAAI,GAAG,CAAC,MAAMvB,KAAK,CAACwB,GAAN,CAAU,gDAAV,CAAP,EAAoED,IAAjF;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,CAAU,CAAV,CAAZ;AACA,UAAMN,IAAI,GAAGM,IAAI,CAACA,IAAL,CAAU,CAAV,CAAb;AACA,QAAII,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAT,IAAcX,IAAd,EAAoB;AAClBU,MAAAA,MAAM,CAACE,IAAP,CAAYZ,IAAI,CAACW,CAAD,CAAhB;AACD;;AACD,SAAKE,QAAL,CAAc;AACZd,MAAAA,QAAQ,EAAEW;AADE,KAAd;AAGAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWI,QAAvB;AACH;;AAEDE,EAAAA,YAAY,CAACa,KAAD,EAAQ;AAClB,SAAKD,QAAL,CAAc;AACZ,OAACC,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADtB,KAAd;AAGD;;AAEDb,EAAAA,MAAM,CAACU,KAAD,EAAQ;AACZ,QAAIA,KAAK,CAACI,OAAN,KAAkB,EAAtB,EAA0B;AACxB,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAI,KAAKxB,KAAL,CAAWK,IAAX,KAAoB,IAAxB,EAA6B;AAC3BmB,QAAAA,GAAG,GAAG,EAAN;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,KAAKxB,KAAL,CAAWK,IAAjB;AACD;;AACDmB,MAAAA,GAAG,CAACP,IAAJ,CAASE,KAAK,CAACC,MAAN,CAAaE,KAAtB;AACA,WAAKJ,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAEmB;AADM,OAAd;AAGD;;AACDX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWK,IAAvB;AACD;;AAED,QAAMG,YAAN,CAAmBW,KAAnB,EAA0B;AACxB,QAAIM,QAAQ,GAAG;AAAC,eAAS,KAAKzB,KAAL,CAAWC,KAArB;AAA4B,cAAQ,KAAKD,KAAL,CAAWE,IAA/C;AAAqD,cAAQwB,YAAY,CAACC,OAAb,CAAqB,WAArB;AAA7D,KAAf;AACAvC,IAAAA,KAAK,CAACwC,IAAN,CAAW,kDAAX,EAA+DH,QAA/D,EACCI,IADD,CACOC,QAAD,IAAc;AAClBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACA,WAAKZ,QAAL,CAAc;AACZf,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAND,EAMI4B,KAAD,IAAW;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDiB,KAAlD;AACD,KARD;AASEZ,IAAAA,KAAK,CAACa,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKlC,KAAL,CAAWI,QAA/B;AACA,UAAM+B,UAAU,GAAG,KAAKnC,KAAL,CAAWG,MAA9B;;AACA,QAAIgC,UAAJ,EAAgB;AACZ,0BACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGH;;AACD,wBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE,GAAd;AAAmBC,QAAAA,YAAY,EAAE;AAAjC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK7B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,WAAW,EAAC,aAAnD;AAAiE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KAAnF;AAA0F,MAAA,QAAQ,EAAE,KAAKK,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAC8B,QAAAA,WAAW,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKpC,KAAL,CAAWK,IAAX,IAAmB,KAAKL,KAAL,CAAWK,IAAX,CAAgBiC,GAAhB,CAAoBC,GAAG,iBACzC,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEH,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,YAAY,EAAE,CAAhC;AAAmCG,QAAAA,UAAU,EAAE,CAA/C;AAAkDC,QAAAA,aAAa,EAAE;AAAjE,OAApB;AAAyF,oBAAW,eAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,SAAtB;AAAiC,MAAA,EAAE,EAAEH,GAArC;AAA0C,MAAA,OAAO,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,GAA7B,CAFF,CADkB,CADpB,CADF,CALF,eAgBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKvC,KAAL,CAAWI,QAAX,iBAAuB;AAAK,MAAA,KAAK,EAAE;AAAEuC,QAAAA,KAAK,EAAE,IAAT;AAAeP,QAAAA,WAAW,EAAE;AAA5B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACxB,oBAAC,YAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,EAAEF,WAAW,CAACI,GAAZ,CAAiBM,MAAD,IAAYA,MAAM,CAACvB,IAAnC,CAHX;AAIE,MAAA,WAAW,EAAGwB,MAAD,iBACX,oBAAC,SAAD,oBAAeA,MAAf;AAAwB,QAAA,EAAE,EAAC,qBAA3B;AAAiD,QAAA,KAAK,EAAC,mBAAvD;AAA2E,QAAA,MAAM,EAAC,QAAlF;AAA2F,QAAA,OAAO,EAAC,UAAnG;AAA8G,QAAA,OAAO,EAAE,KAAKpC,MAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB,CADxB,CAhBF,eA6BI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,IAAjC;AAAsC,MAAA,IAAI,EAAC,MAA3C;AAAkD,MAAA,WAAW,EAAC,MAA9D;AAAqE,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE,IAAtF;AAA4F,MAAA,QAAQ,EAAE,KAAKI,YAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA7BJ,eAiCE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,CADF,CADF;AAuCD;;AAjH6B;;AAoHhC,eAAeT,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\nimport Row from 'react-bootstrap/Row'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body:'',\n      posted: false,\n      tagsList: null,\n      tags: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addTag = this.addTag.bind(this);\n  }\n\n  async componentDidMount() {\n      const data = (await axios.get('https://epiphany-test-three.herokuapp.com/main')).data;\n      console.log(data.data[0]);\n      const tags = data.data[1];\n      let tagArr = [];\n      for (var j in tags) {\n        tagArr.push(tags[j])\n      }\n      this.setState({\n        tagsList: tagArr,\n      });\n      console.log(this.state.tagsList);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addTag(event) {\n    if (event.keyCode === 39) {\n      let arr = [];\n      if (this.state.tags === null){\n        arr = [];\n      } else {\n        arr = this.state.tags;\n      }\n      arr.push(event.target.value)\n      this.setState({\n        tags: arr,\n      });\n    }\n    console.log(this.state.tags);\n  }\n\n  async handleSubmit(event) {\n    let postData = {\"title\": this.state.title, \"body\": this.state.body, \"user\": localStorage.getItem(\"userEmail\")}\n    axios.post('https://epiphany-test-three.herokuapp.com/create', postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        posted: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n      event.preventDefault();\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    const redirectTo = this.state.posted;\n    if (redirectTo) {\n        return (\n          <Redirect to=\"/\" />\n        );\n    }\n    return (\n      <Col style={{paddingLeft: 200, paddingRight: 200}}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" title={this.state.title} onChange={this.handleChange} />\n          </Form.Group>\n          <div className=\"row\">\n            <Row style={{paddingLeft: 25}}>\n            {this.state.tags && this.state.tags.map(tag => (\n              <ButtonGroup style={{ paddingLeft: 2, paddingRight: 2, paddingTop: 2, paddingBottom: 5}} aria-label=\"Basic example\">\n                <Button onClick={this.deleteTag} id={tag} variant=\"secondary\">x</Button>\n                <Button variant=\"secondary\">{tag}</Button>\n              </ButtonGroup>\n              ))\n          }\n            </Row>\n          </div>\n          <div className=\"row\">\n          {this.state.tagsList && <div style={{ width: 1125, paddingLeft: 15 }}>\n          <Autocomplete\n            id=\"free-solo-demo\"\n            freeSolo\n            options={top100Films.map((option) => option.name)}\n            renderInput={(params) => (\n              <TextField {...params}  id=\"standard-full-width\" label=\"Search with tags!\" margin=\"normal\" variant=\"outlined\" onKeyUp={this.addTag}/>\n            )}\n          />\n          </div>\n        }\n          </div>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Body</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"15\" name=\"body\" placeholder=\"Body\" body={this.state.body} onChange={this.handleChange}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n      </Col>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}