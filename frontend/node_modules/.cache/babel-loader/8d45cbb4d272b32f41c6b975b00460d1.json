{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/Login/Login.js\";\nimport React, { Component, useContext } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from \"react-router-dom\";\nimport { userContext } from '../Contexts/Context';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false\n    };\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    /*\n    const posts = (await axios.get('http://localhost:5000/login')).data;\n    console.log(posts);\n    */\n    axios.post('http://localhost:5000/login', {\n      \"email\": 'botilo9852@tmail7.com',\n      \"password\": 'test123'\n    }).then(response => {\n      console.log(response.data[0].name);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  handleChangeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    /*\n     let loginData = {\"email\": this.state.email, \"password\": this.state.password}\n    console.log(loginData);\n     //const { isAuthenticated } = useContext(AuthContext);\n     const request = {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n       //'Content-Type': 'application/json',\n       //'Access-Control-Allow-Headers': 'Content-Type,Authorization, DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range',\n       //'Access-Control-Allow-Origin': '*'\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify(loginData)// body data type must match \"Content-Type\" header\n    }\n    //JSON.stringify(loginData)\n    console.log(request.body);\n    fetch('http://localhost:5000/login', request)\n    .then((response) => {\n      // Do stuff with the response\n      //const { isAuthenticated } = useContext(AuthContext);\n      if (response.status === 200) {\n        /*\n        const { user, setUser } = this.context\n        this.setState({loggedIn: true});\n        const newUser = { name: 'Tim', loggedIn: true }\n        setUser(newUser)\n        console.log(user.name)\n        */\n\n    /*\n    response.json();\n    //localStorage.setItem('token', 'hello');\n    } else {\n    /*\n    this.setState({loggedIn: false});\n    const newUser = { name: 'Tim', loggedIn: false }\n    setUser(newUser)\n    */\n\n    /*\n    response.json();\n    }\n    //let value = this.context\n    //console.log(value)\n    //return console.log('Code', response.status);\n    }).then((data) => {\n    console.log(data);\n    })\n    .catch((error) => {\n    console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n    */\n    const posts = (await axios.get('http://localhost:5000/login')).data;\n    console.log(posts);\n    event.preventDefault();\n  }\n\n  render() {\n    const redirectTo = this.state.loggedIn;\n\n    if (redirectTo === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: \"4\",\n        offset: \"4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      email: this.state.email,\n      onChange: this.handleChangeEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      password: this.state.password,\n      onChange: this.handleChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/Login/Login.js"],"names":["React","Component","useContext","axios","Form","Button","Col","Redirect","userContext","Login","constructor","props","state","email","password","loggedIn","handleChangeEmail","bind","handleChangePassword","handleSubmit","componentDidMount","post","then","response","console","log","data","name","error","event","setState","target","value","posts","get","preventDefault","render","redirectTo","span","offset"],"mappings":"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","sourcesContent":["import React, {Component, useContext} from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { Redirect } from \"react-router-dom\";\nimport { userContext } from '../Contexts/Context'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password:'',\n      loggedIn: false,\n    };\n\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  componentDidMount() {\n    /*\n    const posts = (await axios.get('http://localhost:5000/login')).data;\n    console.log(posts);\n    */\n    axios.post('http://localhost:5000/login', {\n      \"email\": 'botilo9852@tmail7.com',\n      \"password\": 'test123'\n    })\n    .then((response) => {\n      console.log(response.data[0].name);\n    }, (error) => {\n      console.log(error);\n    });\n\n  }\n\n  handleChangeEmail(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handleChangePassword(event) {\n    this.setState({password: event.target.value});\n  }\n\n  async handleSubmit(event) {\n\n    /*\n\n    let loginData = {\"email\": this.state.email, \"password\": this.state.password}\n    console.log(loginData);\n\n    //const { isAuthenticated } = useContext(AuthContext);\n\n    const request = {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n       //'Content-Type': 'application/json',\n       //'Access-Control-Allow-Headers': 'Content-Type,Authorization, DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range',\n       //'Access-Control-Allow-Origin': '*'\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify(loginData)// body data type must match \"Content-Type\" header\n    }\n    //JSON.stringify(loginData)\n    console.log(request.body);\n    fetch('http://localhost:5000/login', request)\n    .then((response) => {\n      // Do stuff with the response\n      //const { isAuthenticated } = useContext(AuthContext);\n      if (response.status === 200) {\n        /*\n        const { user, setUser } = this.context\n        this.setState({loggedIn: true});\n        const newUser = { name: 'Tim', loggedIn: true }\n        setUser(newUser)\n        console.log(user.name)\n        */\n        /*\n        response.json();\n        //localStorage.setItem('token', 'hello');\n      } else {\n        /*\n        this.setState({loggedIn: false});\n        const newUser = { name: 'Tim', loggedIn: false }\n        setUser(newUser)\n        */\n        /*\n        response.json();\n\n      }\n      //let value = this.context\n      //console.log(value)\n      //return console.log('Code', response.status);\n    }).then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n\n      console.log('Looks like there was a problem: \\n', error);\n    });\n\n    event.preventDefault();\n    */\n\n      const posts = (await axios.get('http://localhost:5000/login')).data;\n      console.log(posts);\n      event.preventDefault();\n\n\n  }\n\n  render() {\n    const redirectTo = this.state.loggedIn;\n    if (redirectTo === true) {\n        return (\n          <Redirect to=\"/\" />\n        );\n    }\n    return (\n      <Col md={{ span: \"4\", offset: \"4\" }}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formGroupEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" email={this.state.email} onChange={this.handleChangeEmail} />\n          </Form.Group>\n            <Form.Group controlId=\"formGroupPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" password={this.state.password} onChange={this.handleChangePassword}/>\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Submit</Button>\n        </Form>\n\n      </Col>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}