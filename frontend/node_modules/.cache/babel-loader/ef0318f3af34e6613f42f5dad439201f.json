{"ast":null,"code":"var _jsxFileName = \"/Users/Mehak/Desktop/epiphany/frontend/src/Post/Post.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Comment from './Comment';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null\n    };\n    this.submitComment = this.submitComment.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post\n    });\n  }\n\n  async refreshPage() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post\n    });\n  }\n\n  async submitComment(comment) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    await axios.post(`http://localhost:5000/posts/${params.postId}/comment`, {\n      comment\n    });\n    await this.refreshPage();\n  }\n\n  render() {\n    const {\n      post\n    } = this.state;\n    if (post === null) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }\n    }, \"Loading ...\");\n    var text = post.body;\n    console.log(post.tags);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, tag.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Content:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }\n      }, i);\n    })), localStorage.getItem('loggedIn') === \"true\" && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 63\n      }\n    }, \"Update\"), localStorage.getItem('loggedIn') === \"true\" && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 63\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Comment, {\n      postId: post.id,\n      submitComment: this.submitComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Discussion:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, post.comments && post.comments.map((comment, idx) => /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, comment))))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/Mehak/Desktop/epiphany/frontend/src/Post/Post.js"],"names":["React","Component","axios","Comment","Badge","Row","Col","Button","Post","constructor","props","state","post","submitComment","bind","componentDidMount","match","params","get","postId","data","setState","json_post","refreshPage","comment","render","text","body","console","log","tags","title","map","tag","paddingLeft","paddingRight","name","split","i","key","localStorage","getItem","id","comments","idx"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Comment from './Comment'\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n    };\n\n    this.submitComment = this.submitComment.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match: { params } } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n    });\n  }\n\n  async refreshPage() {\n    const { match: { params } } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n    });\n  }\n\n  async submitComment(comment) {\n    const { match: { params } } = this.props;\n    await axios.post(`http://localhost:5000/posts/${params.postId}/comment`, {\n      comment,\n    });\n    await this.refreshPage();\n  }\n\n  render() {\n    const {post} = this.state;\n    if (post === null) return <p>Loading ...</p>;\n    var text = post.body\n    console.log(post.tags);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{post.title}</h1>\n            <Row>\n            {post.tags && post.tags.map(tag => (\n              <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                <h4>\n                <Badge variant=\"info\">{tag.name}</Badge>\n                </h4>\n              </Col>\n              ))\n            }\n            </Row>\n            <hr className=\"my-4\" />\n            <p>Content:</p>\n              <p className=\"lead\">\n                  {text.split(\"\\n\").map((i,key) => {\n                      return <div key={key}>{i}</div>;\n                  })}\n              </p>\n              {localStorage.getItem('loggedIn') === \"true\" && <Button variant=\"outline-success\">Update</Button>}\n              {localStorage.getItem('loggedIn') === \"true\" && <Button variant=\"outline-danger\">Delete</Button>}\n            <hr className=\"my-4\" />\n            <Comment postId={post.id} submitComment={this.submitComment}/>\n            <hr className=\"my-4\" />\n            <p>Discussion:</p>\n              <p className=\"lead\">\n              {\n                post.comments && post.comments.map((comment, idx) => (\n                  <p className=\"lead\" key={idx}>{comment}</p>\n                ))\n              }\n              </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}