{"ast":null,"code":"var _jsxFileName = \"/Users/yx/epiphany/frontend/src/Homepage/FollowedPosts.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab/';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    this.state = {\n      posts: null,\n      filteredPosts: null,\n      tags: null,\n      tagsList: null,\n      key: 0\n    };\n    this.filterPosts = this.filterPosts.bind(this);\n    this.filterTags = this.filterTags.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n  }\n\n  async componentDidMount() {\n    let loginData = {\n      \"email\": localStorage.getItem(\"userEmail\")\n    };\n    axios.post('http://localhost:5000/profile', loginData).then(response => {\n      const posts = response.data.data[0];\n      const tags = response.data.data[1];\n      let arr = [];\n\n      for (var i in posts) {\n        arr.push(posts[i]);\n      }\n\n      let tagArr = [];\n\n      for (var j in tags) {\n        tagArr.push(tags[j]);\n      }\n\n      this.setState({\n        posts: arr,\n        filteredPosts: arr,\n        tagsList: tagArr\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  filterPosts(event) {\n    this.setState({\n      filteredPosts: this.state.posts.filter(post => {\n        return post.title.toLowerCase().includes(event.target.value.toLowerCase()) || post.body.toLowerCase().includes(event.target.value.toLowerCase());\n      })\n    });\n  }\n\n  deleteTag(event) {\n    let arr = [];\n\n    if (this.state.tags === null) {\n      arr = [];\n    } else {\n      arr = this.state.tags;\n    }\n\n    const index = arr.indexOf(event.target.id);\n    arr.splice(index, 1);\n    this.setState({\n      tags: arr,\n      filteredPosts: this.state.posts.filter(post => {\n        var check = false;\n        let count = 0;\n        arr.forEach(myTag => {\n          post.tags.forEach(tag => {\n            if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n              count = count + 1;\n            }\n          });\n        });\n\n        if (count === arr.length) {\n          check = true;\n        } else {\n          check = false;\n        }\n\n        return check;\n      })\n    });\n  }\n\n  filterTags(event) {\n    if (event.keyCode === 13) {\n      if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag has already been added.\"\n        });\n      } else if (!this.state.tagsList.some(tag => tag.name.toLowerCase() === event.target.value.toLowerCase())) {\n        this.setState({\n          errorMessage: \"Tag does not exist.\"\n        });\n      } else {\n        this.setState({\n          errorMessage: ''\n        });\n        let arr = [];\n\n        if (this.state.tags === null) {\n          arr = [];\n        } else {\n          arr = this.state.tags;\n        }\n\n        let tempArr = this.state.tagsList.map(function (value) {\n          return value.name.toLowerCase();\n        });\n\n        if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n          arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())].name);\n        } else {\n          arr.push(event.target.value);\n        }\n\n        this.setState({\n          tags: arr,\n          filteredPosts: this.state.posts.filter(post => {\n            var check = false;\n            let count = 0;\n            arr.forEach(myTag => {\n              post.tags.forEach(tag => {\n                if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n                  count = count + 1;\n                }\n              });\n            });\n\n            if (count === arr.length) {\n              check = true;\n            } else {\n              check = false;\n            }\n\n            return check;\n          })\n        });\n      }\n    }\n  }\n\n  getColor() {\n    if (this.colors.length === 0) {\n      this.colors = [\"#ffbaba\", \"#ffddab\", \"#fdffcf\", \"#bdffb3\", \"#b8fff9\", \"#ffd1ea\", \"#edc4ff\"];\n    }\n\n    var len = this.colors.length;\n    var randomNum = Math.floor(Math.random() * len);\n    var color = this.colors[randomNum];\n    this.colors.splice(randomNum, 1);\n    return color;\n  }\n\n  render() {\n    const top100Films = this.state.tagsList;\n    let first = 0;\n\n    function myKey() {\n      first = first + 1;\n      return first;\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, this.state.posts === null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 47\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 96\n      }\n    }, \"Loading posts...\")), this.state.filteredPosts && this.state.filteredPosts.map(post => /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: post.id,\n      style: {\n        backgroundColor: this.getColor(),\n        marginTop: 10,\n        marginBottom: 10,\n        alignItems: \"center\",\n        width: '50rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      key: myKey(),\n      to: `/post/${post.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        color: \"#161717\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      key: myKey(),\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2,\n        alignItems: \"center\"\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, tag.name)))), post.is_file === false && /*#__PURE__*/React.createElement(Card.Text, {\n      style: {\n        color: \"#161717\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Truncate, {\n      lines: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, post.body)), post.is_file === true && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"samp\",\n      width: \"540\",\n      height: \"380\",\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: `./static/${post.body}`,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }), \"Your browser does not support this video format.\")))), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      key: myKey(),\n      to: `/users/${post.user_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: \"#323336\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, \"Posted by \", post.user, \" at \", post.time)))))));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/yx/epiphany/frontend/src/Homepage/FollowedPosts.js"],"names":["React","Component","Link","axios","Truncate","Badge","Row","Col","Spinner","Form","Button","ButtonGroup","TextField","Autocomplete","Card","Container","Alert","Posts","constructor","props","colors","state","posts","filteredPosts","tags","tagsList","key","filterPosts","bind","filterTags","deleteTag","componentDidMount","loginData","localStorage","getItem","post","then","response","data","arr","i","push","tagArr","j","setState","error","console","log","event","filter","title","toLowerCase","includes","target","value","body","index","indexOf","id","splice","check","count","forEach","myTag","tag","name","length","keyCode","some","errorMessage","tempArr","map","getColor","len","randomNum","Math","floor","random","color","render","top100Films","first","myKey","backgroundColor","marginTop","marginBottom","alignItems","width","textAlign","paddingLeft","paddingRight","is_file","user_id","user","time"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Truncate from 'react-truncate';\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {TextField} from '@material-ui/core/';\nimport {Autocomplete} from '@material-ui/lab/';\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nclass Posts extends Component {\n\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        posts: null,\n        filteredPosts: null,\n        tags: null,\n        tagsList: null,\n        key: 0,\n      };\n      this.filterPosts = this.filterPosts.bind(this);\n      this.filterTags = this.filterTags.bind(this);\n      this.deleteTag = this.deleteTag.bind(this);\n    }\n  \n    async componentDidMount() {\n        let loginData = {\"email\": localStorage.getItem(\"userEmail\")}\n        axios.post('http://localhost:5000/profile', loginData)\n        .then((response) => {\n            const posts = response.data.data[0];\n            const tags = response.data.data[1];\n            let arr = [];\n            for (var i in posts) {\n            arr.push(posts[i])\n            }\n            let tagArr = [];\n            for (var j in tags) {\n            tagArr.push(tags[j])\n            }\n            this.setState({\n            posts: arr,\n            filteredPosts: arr,\n            tagsList: tagArr,\n            });\n        }, (error) => {\n            console.log('Looks like there was a problem: \\n', error);\n        });\n    }\n  \n    filterPosts(event) {\n      this.setState({\n        filteredPosts: this.state.posts.filter(post => {\n          return post.title.toLowerCase().includes(event.target.value.toLowerCase())\n          || post.body.toLowerCase().includes(event.target.value.toLowerCase())\n        })\n      });\n    }\n  \n    deleteTag(event) {\n      let arr = [];\n      if (this.state.tags === null){\n        arr = [];\n      } else {\n        arr = this.state.tags;\n      }\n  \n      const index = arr.indexOf(event.target.id)\n      arr.splice(index, 1)\n      this.setState({\n        tags: arr,\n        filteredPosts: this.state.posts.filter(post => {\n          var check = false;\n          let count = 0;\n          arr.forEach(myTag => {\n            post.tags.forEach(tag => {\n              if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n                count = count + 1;\n              }\n            })\n          });\n          if (count === arr.length) {\n            check = true;\n          } else {\n            check = false;\n          }\n          return check;\n        }),\n      })\n    }\n  \n    filterTags(event) {\n      if (event.keyCode === 13) {\n        if (this.state.tags !== null && this.state.tags.some(tag => tag.toLowerCase() === event.target.value.toLowerCase())) {\n          this.setState({\n            errorMessage: \"Tag has already been added.\"\n          })\n        } else if (!this.state.tagsList.some(tag => tag.name.toLowerCase() === event.target.value.toLowerCase())) {\n          this.setState({\n            errorMessage: \"Tag does not exist.\"\n          })\n        } else {\n          this.setState({\n            errorMessage: ''\n          })\n          let arr = [];\n          if (this.state.tags === null){\n            arr = [];\n          } else {\n            arr = this.state.tags;\n          }\n          let tempArr = this.state.tagsList.map(function(value) {\n            return value.name.toLowerCase();\n          });\n          if (tempArr.indexOf(event.target.value.toLowerCase()) !== -1) {\n            arr.push(this.state.tagsList[tempArr.indexOf(event.target.value.toLowerCase())].name);\n          } else {\n            arr.push(event.target.value)\n          }\n          this.setState({\n            tags: arr,\n            filteredPosts: this.state.posts.filter(post => {\n              var check = false;\n              let count = 0;\n              arr.forEach(myTag => {\n                post.tags.forEach(tag => {\n                  if (tag.name.toLowerCase().includes(myTag.toLowerCase())) {\n                    count = count + 1;\n                  }\n                })\n              });\n              if (count === arr.length) {\n                check = true;\n              } else {\n                check = false;\n              }\n              return check;\n            }),\n          });\n        }\n    }\n  }\n  \n    colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n    getColor(){\n      if (this.colors.length === 0) {\n        this.colors = [\"#ffbaba\",\"#ffddab\",\"#fdffcf\",\"#bdffb3\",\"#b8fff9\",\"#ffd1ea\",\"#edc4ff\"];\n      }\n      var len = this.colors.length;\n      var randomNum = Math.floor(Math.random()*len);\n      var color = this.colors[randomNum];\n      this.colors.splice(randomNum, 1);\n      return color;\n    }\n  \n    render() {\n      const top100Films = this.state.tagsList;\n      let first = 0;\n      function myKey() {\n        first = first + 1;\n        return first;\n      }\n      return (\n        <Container className=\"justify-content-md-center\">\n          {this.state.posts === null && <div> <Spinner animation=\"border\" variant=\"primary\" /> <p>Loading posts...</p></div>}\n  \n          {this.state.filteredPosts && this.state.filteredPosts.map(post => (\n            <Row className=\"justify-content-md-center\">\n  \n            <Card key={post.id} style={{backgroundColor: this.getColor(), marginTop: 10, marginBottom: 10, alignItems: \"center\", width: '50rem'}}>\n              <Link key={myKey()} to={`/post/${post.id}`}>\n                  <Card.Body>\n                    <Card.Title style={{color: \"#161717\", textAlign: \"center\"}}>{post.title}</Card.Title>\n                    <Row className=\"justify-content-md-center\">\n                    {post.tags && post.tags.map(tag => (\n                      <Col key={myKey()} style={{ paddingLeft: 2, paddingRight: 2, alignItems: \"center\" }} md=\"auto\">\n                        <Badge variant=\"info\">{tag.name}</Badge>\n                      </Col>\n                      ))\n                    }\n                    </Row>\n                    {post.is_file === false &&\n                    <Card.Text style={{color: \"#161717\", textAlign: \"center\"}}>\n                    <Truncate lines={2}>\n                        {post.body}\n                    </Truncate>\n                    </Card.Text>\n                  }\n                  {post.is_file === true &&\n                    <div>\n                      <video id=\"samp\" width=\"540\" height=\"380\" controls>\n                          <source src={`./static/${post.body}`} type=\"video/mp4\">\n                          </source>\n                          Your browser does not support this video format.\n                      </video>\n                    </div>\n                }\n                  </Card.Body>\n                  </Link>\n                  <Card.Text className=\"mb-3\">\n                    <Link key={myKey()} to={`/users/${post.user_id}`}>\n                      <small style={{color: \"#323336\"}}>Posted by {post.user} at {post.time}</small>\n                    </Link>\n                  </Card.Text>\n              </Card>\n              </Row>\n            ))\n          }\n        </Container>\n      )\n    }\n  }\n  \n  export default Posts;"]},"metadata":{},"sourceType":"module"}