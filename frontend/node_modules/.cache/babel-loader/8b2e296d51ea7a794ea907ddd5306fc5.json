{"ast":null,"code":"var _jsxFileName = \"/Users/yx/epiphany/frontend/src/Post/Post.js\";\nimport React, { Component, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Comment from './Comment';\nimport Badge from 'react-bootstrap/Badge';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\nimport Form from 'react-bootstrap/Form';\nimport Collapse from 'react-bootstrap/Collapse';\n\nclass Post extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.Reply = props => {\n      const [open, setOpen] = useState(false);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n        onClick: () => setOpen(!open),\n        \"aria-controls\": \"example-collapse-text\",\n        \"aria-expanded\": open,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, \"Reply\"), /*#__PURE__*/React.createElement(Collapse, {\n        in: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: e => this.replyTo(e, props.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        name: \"reply\",\n        placeholder: props.id,\n        reply: this.state.reply,\n        onChange: this.updateComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"Reply\")))));\n    };\n\n    this.state = {\n      post: null,\n      text: '',\n      postId: 0,\n      deleted: false,\n      commented: false,\n      reply: '',\n      replied: false,\n      c_deleted: false\n    };\n    this.submit = this.submit.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.replyTo = this.replyTo.bind(this);\n    this.Reply = this.Reply.bind(this);\n  }\n\n  async componentDidMount() {\n    this.refreshPost();\n  }\n\n  async refreshPost() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n      postId: params.postId,\n      commented: false\n    });\n  }\n\n  updateComment(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state.reply);\n  }\n\n  async submit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let postData = {\n      \"text\": this.state.text,\n      \"user_email\": localStorage.getItem('userEmail'),\n      \"post_id\": params.postId\n    };\n    console.log(postData);\n    axios.post(`http://localhost:5000/posts/${params.postId}/comment`, postData).then(response => {\n      console.log(response);\n      this.setState({\n        commented: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  async deletePost() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.post(`http://localhost:5000/posts/${params.postId}/delete`).then(response => {\n      console.log(response);\n      this.setState({\n        deleted: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  async deleteComment(event, id) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.post(`http://localhost:5000/posts/${params.postId}/${id}/delete`).then(response => {\n      console.log(response);\n      this.setState({\n        deleted: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  async replyTo(event, id) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    let postData = {\n      \"text\": this.state.reply,\n      \"user_email\": localStorage.getItem('userEmail'),\n      \"post_id\": params.postId,\n      \"parent_id\": id\n    };\n    console.log(postData);\n    axios.post(`http://localhost:5000/posts/${params.postId}/${id}/reply`, postData).then(response => {\n      console.log(response);\n      this.setState({\n        replied: true\n      });\n    }, error => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const deleted = this.state.deleted;\n    const commented = this.state.commented;\n    const replied = this.state.replied;\n    const c_deleted = this.state.c_deleted;\n\n    if (deleted) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (commented || replied || c_deleted) {\n      this.refreshPost();\n    }\n\n    const {\n      post\n    } = this.state;\n    if (post === null) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 31\n      }\n    }, \"Loading ...\");\n    var text = post.body;\n    console.log(post.tags);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, post.tags && post.tags.map(tag => /*#__PURE__*/React.createElement(Col, {\n      style: {\n        paddingLeft: 2,\n        paddingRight: 2\n      },\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, tag.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 30\n        }\n      }, i);\n    })), localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email && /*#__PURE__*/React.createElement(Link, {\n      to: `${post.id}/update`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 122\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 153\n      }\n    }, \"Update\")), localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      onClick: () => {\n        this.deletePost();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 122\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      name: \"text\",\n      placeholder: \"Any comments?\",\n      text: this.state.text,\n      onChange: this.updateComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"Comment\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }), post.comments.map(comment => comment.comment_level === 1 ? /*#__PURE__*/React.createElement(Media, {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 31\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 31\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 42\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 40\n        }\n      }, \" \", comment.time, \" \\xB7 \", /*#__PURE__*/React.createElement(this.Reply, {\n        id: comment.comment_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 67\n        }\n      }), \" \\xB7 delete \")));\n    })))) : comment.comment_level === 2 ? /*#__PURE__*/React.createElement(Media, {\n      className: \"ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 31\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 44\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 42\n        }\n      }, comment.time, \" \\xB7 \", /*#__PURE__*/React.createElement(this.Reply, {\n        id: comment.comment_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 68\n        }\n      }))));\n    })))) : /*#__PURE__*/React.createElement(Media, {\n      className: \"ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 31\n      }\n    }, comment.commentor), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, comment.text.split(\"\\n\").map((i, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 46\n        }\n      }, i, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 44\n        }\n      }, comment.time, \" \\xB7 \", /*#__PURE__*/React.createElement(this.Reply, {\n        id: comment.comment_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 70\n        }\n      }))));\n    }))))))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/yx/epiphany/frontend/src/Post/Post.js"],"names":["React","Component","useState","Redirect","Link","axios","Comment","Badge","Row","Col","Button","Media","Form","Collapse","Post","constructor","props","Reply","open","setOpen","e","replyTo","id","state","reply","updateComment","post","text","postId","deleted","commented","replied","c_deleted","submit","bind","deletePost","componentDidMount","refreshPost","match","params","get","data","setState","json_post","event","target","name","value","console","log","postData","localStorage","getItem","then","response","error","preventDefault","deleteComment","render","body","tags","title","map","tag","paddingLeft","paddingRight","split","i","key","user_email","comments","comment","comment_level","commentor","time","comment_id"],"mappings":"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","sourcesContent":["  \nimport React, {Component, useState} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Comment from './Comment'\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Media from 'react-bootstrap/Media'\nimport Form from 'react-bootstrap/Form'\nimport Collapse from 'react-bootstrap/Collapse'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      text: '',\n      postId: 0,\n      deleted: false,\n      commented: false,\n      reply: '',\n      replied: false,\n      c_deleted: false,\n    };\n    this.submit = this.submit.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.replyTo = this.replyTo.bind(this);\n    this.Reply = this.Reply.bind(this);\n  }\n\n  async componentDidMount() {\n    this.refreshPost();\n  }\n  async refreshPost() {\n    const { match: { params } } = this.props;\n    const post = (await axios.get(`http://localhost:5000/posts/${params.postId}`)).data;\n    this.setState({\n      post: post.json_post,\n      postId: params.postId,\n      commented: false,\n    });\n  }\n\n  updateComment(event) {\n    this.setState({\n        [event.target.name]: event.target.value\n      });\n    console.log(this.state.reply);\n  }\n\n  async submit(event) {\n    const { match: { params } } = this.props;\n    let postData = {\"text\": this.state.text, \"user_email\": localStorage.getItem('userEmail'), \"post_id\": params.postId}\n    console.log(postData);\n    axios.post(`http://localhost:5000/posts/${params.postId}/comment`, postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        commented: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  async deletePost() {\n    const { match: { params } } = this.props;\n    axios.post(`http://localhost:5000/posts/${params.postId}/delete`)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        deleted: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  async deleteComment(event, id) {\n    const { match: { params } } = this.props;\n    axios.post(`http://localhost:5000/posts/${params.postId}/${id}/delete`)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        deleted: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n  }\n\n  async replyTo(event, id) {\n    const { match: { params } } = this.props;\n    let postData = {\"text\": this.state.reply, \"user_email\": localStorage.getItem('userEmail'), \"post_id\": params.postId, \"parent_id\": id}\n    console.log(postData);\n    axios.post(`http://localhost:5000/posts/${params.postId}/${id}/reply`, postData)\n    .then((response) => {\n      console.log(response);\n      this.setState({\n        replied: true,\n      })\n    }, (error) => {\n      console.log('Looks like there was a problem: \\n', error);\n    });\n    event.preventDefault();\n  }\n\n  Reply = (props) => {\n    const [open, setOpen] = useState(false);\n\n    return (\n      <>\n        <Link\n          onClick={() => setOpen(!open)}\n          aria-controls=\"example-collapse-text\"\n          aria-expanded={open}\n          size=\"sm\"\n        >\n        Reply\n        </Link>\n        <Collapse in={open}>\n          <div>\n            <Form onSubmit={(e) => this.replyTo(e, props.id)}>\n                <Form.Group controlId=\"text\">\n                    <Form.Control as=\"textarea\" name=\"reply\" placeholder={props.id} reply={this.state.reply} onChange={this.updateComment} />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\" size=\"sm\">Reply</Button>\n            </Form>\n          </div>\n        </Collapse>\n      </>\n    );\n  }\n\n  render() {\n    const deleted = this.state.deleted;\n    const commented = this.state.commented;\n    const replied = this.state.replied;\n    const c_deleted = this.state.c_deleted;\n    if (deleted) {\n      return (\n        <Redirect to=\"/\" />\n      );\n    }\n    if (commented || replied || c_deleted) {\n      this.refreshPost();\n    }\n    const {post} = this.state;\n    if (post === null) return <p>Loading ...</p>;\n    var text = post.body\n    console.log(post.tags);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{post.title}</h1>\n            <Row>\n            {post.tags && post.tags.map(tag => (\n              <Col style={{ paddingLeft: 2, paddingRight: 2 }} md=\"auto\">\n                <h4>\n                <Badge variant=\"info\">{tag.name}</Badge>\n                </h4>\n              </Col>\n              ))\n            }\n            </Row>\n            <hr className=\"my-4\" />\n              <p className=\"lead\">\n                  {text.split(\"\\n\").map((i,key) => {\n                      return <div key={key}>{i}</div>;\n                  })}\n              </p>\n              {(localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email) && <Link to={`${post.id}/update`}><Button variant=\"outline-success\">Update</Button></Link>}\n              {(localStorage.getItem('loggedIn') === \"true\" && localStorage.getItem('userEmail') === post.user_email) && <Button variant=\"outline-danger\" onClick={() => {this.deletePost()}}>Delete</Button>}\n            <hr className=\"my-4\" />\n\n            <Form onSubmit={this.submit}>\n              <Form.Group controlId=\"text\">\n                  <Form.Control as=\"textarea\" name=\"text\" placeholder=\"Any comments?\" text={this.state.text} onChange={this.updateComment} />\n              </Form.Group>\n              <Button variant=\"success\" type=\"submit\">Comment</Button>\n            </Form>\n\n            <hr className=\"my-4\" />\n                {\n                  post.comments.map(comment => (\n                    comment.comment_level === 1 ?\n                          <Media className=\"mt-1\">\n                            <Media.Body>\n                              <h5>{ comment.commentor }</h5>\n                              <p>\n                                { comment.text.split(\"\\n\").map((i,key) => {\n                                  return <div key={key}>\n                                    {i}\n                                    <p><small> { comment.time } · <this.Reply id={ comment.comment_id }/> · delete </small></p>\n                                    </div>;\n                                }) }\n                              </p>\n                            </Media.Body>\n                          </Media>\n                    : comment.comment_level === 2 ?\n                        <Media className=\"ml-3\">\n                          <Media.Body>\n                            <h5>{ comment.commentor }</h5>\n                              <p>\n                                { comment.text.split(\"\\n\").map((i,key) => {\n                                    return <div key={key}>\n                                      {i}\n                                      <p><small>{ comment.time } · <this.Reply id={ comment.comment_id }/></small></p>\n                                    </div>;\n                                }) }\n                              </p>\n                          </Media.Body>\n                        </Media>\n                        :\n                          <Media className=\"ml-5\">\n                            <Media.Body>\n                              <h5>{ comment.commentor }</h5>\n                                <p>\n                                  { comment.text.split(\"\\n\").map((i,key) => {\n                                      return <div key={key}>\n                                        {i}\n                                        <p><small>{ comment.time } · <this.Reply id={ comment.comment_id }/></small></p>\n                                      </div>;\n                                  }) }\n                                </p>\n                            </Media.Body>\n                          </Media>\n                  ))\n                }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}